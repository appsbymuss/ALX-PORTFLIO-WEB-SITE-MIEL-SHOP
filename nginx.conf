user  www-data;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Log settings
    access_log    /var/log/nginx/access.log combined;
    error_log     /var/log/nginx/error.log error;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    # Gzip settings
    gzip  on;
    gzip_disable "msie6";

    server {
        listen       80;
        listen  [::]:80;
        server_name <domain-name>;

        location /.well-known/acme-challenge/ {
            root /var/www/html;
            allow all;
        }

        if ($host = <domain-name>) {
            return 301 https://$host$request_uri;
        } # managed by Certbot

        return 404; # managed by Certbot
    }

    server {
        listen      443 ssl http2; # managed by Certbot
        listen [::]:443 ssl http2;
        server_name <domain-name>;

        ssl_certificate /etc/letsencrypt/live/<domain-name>/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/<domain-name>/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        # Serve React static files (for the front-end)
        location / {
            root   /home/Miel.shop/client/dist;  # Folder with React build files
            try_files $uri /index.html;  # Allow React to handle client-side routing
        }

        # HINT: IF RUN ON DOCKER_COMPOSE, MUST CHANGE TO "express_app" (DNS-[internally] REASONS !!!!!!)

        location /public/ {
            alias /home/Miel.shop/public/;
            autoindex off;
        }

        # Proxy /api/ requests to Express
        location /api/ {
            proxy_pass  <server-addr>:<server-port>;  # Forward to the Express server
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Additional configurations for stability
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
            proxy_buffering off;
        }

        # Proxy /auth/ requests to Express
        location /auth/ {
            proxy_pass  <server-addr>:<server-port>;  # Forward to the same Express server
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Additional configurations for stability
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
            proxy_buffering off;
        }

        # TODO: Socket.IO requests
    }
}
